- name: Check nodes status
  k8s_facts:
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors: "app={{ app_name }}"
  register: pod
  until: "true in (pod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 30

- name: Obtain route
  k8s_facts:
    kind: Route
    namespace: "{{ namespace }}"
    label_selectors: "app=nginx"
  register: nginx_route

- name: Acces the html file
  uri:
    url: http://{{ nginx_route.resources[0].spec.host }}
    method: GET
    status_code: 200

- name: Get /var/log/nginx/access.log file content
  shell: "{{ oc_binary }} -n {{ namespace }} rsh $({{ oc_binary }} get pods -n {{ namespace }} -o jsonpath='{.items[0].metadata.name}') cat /var/log/nginx/access.log "
  register: output
  until: output.rc == 0 and output.stdout != ''
  retries: 5

- debug: msg={{ output.stdout_lines }}
  name: /var/log/nginx/access.log file content

- name: Fail if no 403 error present in nginx access.log file. There must be 1 error
  fail:
     msg: There should be one and only one 403 error in access.log file.
  failed_when: 1 != ( output.stdout_lines | select('match', '.*403 153 "-" "ansible-httpget".*') | list | length )

- name: Fail if no 200 code present in nginx access.log file. There must be 2 access
  fail:
     msg: There should be one and only one 200 code in access.log file.
  failed_when: 2 != ( output.stdout_lines | select('match', '.*200 21 "-" \"ansible-httpget".*') | list | length )

- name: Get /var/log/nginx/error.log file content
  shell: "{{ oc_binary }} -n {{ namespace }} rsh $({{ oc_binary }} get pods -n {{ namespace }} -o jsonpath='{.items[0].metadata.name}') cat /var/log/nginx/error.log "
  register: output
  until: output.rc == 0 and output.stdout != ''
  retries: 5

- debug: msg={{ output.stdout_lines }}
  name: /var/log/nginx/error.log file content

- name: Fail if no forbidden error present in nginx access.log file. There must be 1 error
  fail:
     msg: There should be one and only one forbidden error in access.log file.
  failed_when: 1 != ( output.stdout_lines | select('match', '.*directory index of "/usr/share/nginx/html/" is forbidden.*') | list | length )
